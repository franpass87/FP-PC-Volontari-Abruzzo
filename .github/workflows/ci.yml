name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mysqli, zip, json
          tools: composer, phpcs, phpstan
          coverage: none
          
      - name: Validate composer.json (if exists)
        if: hashFiles('composer.json') != ''
        run: composer validate --strict
        
      - name: Install dependencies (if composer.json exists)
        if: hashFiles('composer.json') != ''
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Check PHP syntax
        run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;
        
      - name: WordPress Coding Standards
        run: |
          composer global require "wp-coding-standards/wpcs:^3.0"
          phpcs --config-set installed_paths ~/.composer/vendor/wp-coding-standards/wpcs
          phpcs --standard=WordPress --extensions=php --ignore=vendor/ .
        continue-on-error: true
        
      - name: Check file permissions
        run: |
          find . -type f -name "*.php" -executable -not -path "./vendor/*" | while read file; do
            echo "Warning: $file is executable"
          done
          
      - name: Validate JSON files
        run: |
          find . -name "*.json" -not -path "./vendor/*" -exec sh -c 'echo "Validating $1"; cat "$1" | python3 -m json.tool > /dev/null' _ {} \;

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  wordpress-compatibility:
    name: WordPress Compatibility Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2']
        wordpress-version: ['5.0', '6.0', '6.4']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mysqli, zip, json
          coverage: none
          
      - name: Setup WordPress test environment
        run: |
          # Setup WordPress testing environment
          export WP_VERSION=${{ matrix.wordpress-version }}
          export WP_MULTISITE=0
          
          # Create WordPress installation for testing
          mkdir -p /tmp/wordpress-test
          cd /tmp/wordpress-test
          
          # Download WordPress
          wget -nv -O wordpress.tar.gz https://wordpress.org/wordpress-${WP_VERSION}.tar.gz
          tar -xzf wordpress.tar.gz
          
          # Basic syntax check against WordPress files
          echo "Testing plugin compatibility with WordPress ${{ matrix.wordpress-version }} and PHP ${{ matrix.php-version }}"
          php -l ${{ github.workspace }}/pc-volontari-abruzzo.php
          
      - name: Test plugin activation
        run: |
          # Simulate basic WordPress plugin structure validation
          if grep -q "Plugin Name:" pc-volontari-abruzzo.php; then
            echo "✓ Plugin header found"
          else
            echo "✗ Plugin header missing"
            exit 1
          fi
          
          if grep -q "register_activation_hook" pc-volontari-abruzzo.php; then
            echo "✓ Activation hook found"
          else
            echo "✗ Activation hook missing"
          fi